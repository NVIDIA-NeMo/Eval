[project]
name = "nemo-evaluator-launcher"
version = "0.0.0+dev.local" # This is a) overridden before build/release b) tag is pushed, see `ci.yml`
description = "NeMo Evaluator Launcher - Public API"
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
  "hydra-core>=1.3.2,<2.0.0",
  "jinja2>=3.1.6,<4.0.0",
  "leptonai>=0.25.0",
  "pyyaml>=6.0.0",
  "requests>=2.32.4",
  "simple-parsing>=0.1.7,<0.2.0",
  "structlog>=25.4.0,<26.0.0",
  "tabulate>=0.9.0,<0.10.0",
  "tomli>=2.0.0,<3.0.0; python_version < '3.11'", # this is required only for old python
  "mlflow>=2.8.0",
  "wandb>=0.15.0",
  "gsheets>=0.1.0",
]

[project.optional-dependencies]
mlflow = ["mlflow>=2.8.0"]
wandb = ["wandb>=0.15.0"]
gsheets = ["gsheets>=0.1.0"]
# aggregators
exporters = ["mlflow", "wandb", "gsheets"]
all = ["mlflow", "wandb", "gsheets"]

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
black = "^25.1.0"
isort = "^6.0.1"
python-semantic-release = "^10.0.0"
pytest = ">=8.0.0,<9.0.0"
pytest-cov = "^6.2.1"

[tool.poetry]
packages = [{ include = "nemo_evaluator_launcher", from = "src" }]

include = [
  { path = "configs", format = "sdist" },
  { path = "configs", format = "wheel" },
  { path = "src/nemo_evaluator_launcher/resources/**", format = "sdist" },
  { path = "src/nemo_evaluator_launcher/resources/**", format = "wheel" },
]

[tool.poetry.scripts]
nemo-evaluator-launcher = "nemo_evaluator_launcher.cli.main:main"
nv-eval = "nemo_evaluator_launcher.cli.main:main"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
known_first_party = [
  "nemo_evaluator_launcher",
  "nemo_evaluator_launcher_internal",
]
profile = "black"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Note: Use --noop flag when running semantic-release for dry-run mode
# Example: semantic-release version --noop
[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
commit_message = "chore(release): {version}"
commit_author = "eval-platform-ci <eval-platform-ci@nvidia.com>"
major_on_zero = false
allow_zero_version = true

[tool.semantic_release.branches.main]
match = "main"
prerelease = false
