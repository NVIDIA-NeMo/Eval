# {py:mod}`nemo_eval.utils.api`

```{py:module} nemo_eval.utils.api
```

```{autodoc2-docstring} nemo_eval.utils.api
:parser: docs.autodoc2_docstrings_parser
:allowtitles:
```

## Module Contents

### Classes

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`ApiEndpoint <nemo_eval.utils.api.ApiEndpoint>`
  - ```{autodoc2-docstring} nemo_eval.utils.api.ApiEndpoint
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
* - {py:obj}`EvaluationTarget <nemo_eval.utils.api.EvaluationTarget>`
  - ```{autodoc2-docstring} nemo_eval.utils.api.EvaluationTarget
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
* - {py:obj}`ConfigParams <nemo_eval.utils.api.ConfigParams>`
  - ```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
* - {py:obj}`EvaluationConfig <nemo_eval.utils.api.EvaluationConfig>`
  - ```{autodoc2-docstring} nemo_eval.utils.api.EvaluationConfig
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
* - {py:obj}`AdapterConfig <nemo_eval.utils.api.AdapterConfig>`
  - ```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
````

### API

`````{py:class} ApiEndpoint(/, **data: typing.Any)
:canonical: nemo_eval.utils.api.ApiEndpoint

Bases: {py:obj}`pydantic.BaseModel`

```{autodoc2-docstring} nemo_eval.utils.api.ApiEndpoint
:parser: docs.autodoc2_docstrings_parser
```

```{rubric} Initialization
```

```{autodoc2-docstring} nemo_eval.utils.api.ApiEndpoint.__init__
:parser: docs.autodoc2_docstrings_parser
```

````{py:attribute} url
:canonical: nemo_eval.utils.api.ApiEndpoint.url
:type: str
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ApiEndpoint.url
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} model_id
:canonical: nemo_eval.utils.api.ApiEndpoint.model_id
:type: str
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ApiEndpoint.model_id
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} type
:canonical: nemo_eval.utils.api.ApiEndpoint.type
:type: str
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ApiEndpoint.type
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} nemo_triton_http_port
:canonical: nemo_eval.utils.api.ApiEndpoint.nemo_triton_http_port
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ApiEndpoint.nemo_triton_http_port
:parser: docs.autodoc2_docstrings_parser
```

````

`````

`````{py:class} EvaluationTarget(/, **data: typing.Any)
:canonical: nemo_eval.utils.api.EvaluationTarget

Bases: {py:obj}`pydantic.BaseModel`

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationTarget
:parser: docs.autodoc2_docstrings_parser
```

```{rubric} Initialization
```

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationTarget.__init__
:parser: docs.autodoc2_docstrings_parser
```

````{py:attribute} api_endpoint
:canonical: nemo_eval.utils.api.EvaluationTarget.api_endpoint
:type: nemo_eval.utils.api.ApiEndpoint
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationTarget.api_endpoint
:parser: docs.autodoc2_docstrings_parser
```

````

`````

`````{py:class} ConfigParams(**data)
:canonical: nemo_eval.utils.api.ConfigParams

Bases: {py:obj}`pydantic.BaseModel`

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams
:parser: docs.autodoc2_docstrings_parser
```

```{rubric} Initialization
```

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.__init__
:parser: docs.autodoc2_docstrings_parser
```

````{py:attribute} top_p
:canonical: nemo_eval.utils.api.ConfigParams.top_p
:type: float
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.top_p
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} temperature
:canonical: nemo_eval.utils.api.ConfigParams.temperature
:type: float
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.temperature
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} limit_samples
:canonical: nemo_eval.utils.api.ConfigParams.limit_samples
:type: typing.Optional[typing.Union[int, float]]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.limit_samples
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} num_fewshot
:canonical: nemo_eval.utils.api.ConfigParams.num_fewshot
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.num_fewshot
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} max_new_tokens
:canonical: nemo_eval.utils.api.ConfigParams.max_new_tokens
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.max_new_tokens
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} max_retries
:canonical: nemo_eval.utils.api.ConfigParams.max_retries
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.max_retries
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} parallelism
:canonical: nemo_eval.utils.api.ConfigParams.parallelism
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.parallelism
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} task
:canonical: nemo_eval.utils.api.ConfigParams.task
:type: typing.Optional[str]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.task
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} request_timeout
:canonical: nemo_eval.utils.api.ConfigParams.request_timeout
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.request_timeout
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} extra
:canonical: nemo_eval.utils.api.ConfigParams.extra
:type: typing.Optional[typing.Dict[str, typing.Any]]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.extra
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} batch_size
:canonical: nemo_eval.utils.api.ConfigParams.batch_size
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.batch_size
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} top_k
:canonical: nemo_eval.utils.api.ConfigParams.top_k
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.top_k
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} add_bos
:canonical: nemo_eval.utils.api.ConfigParams.add_bos
:type: typing.Optional[bool]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.add_bos
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} bootstrap_iters
:canonical: nemo_eval.utils.api.ConfigParams.bootstrap_iters
:type: int
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.ConfigParams.bootstrap_iters
:parser: docs.autodoc2_docstrings_parser
```

````

`````

`````{py:class} EvaluationConfig(/, **data: typing.Any)
:canonical: nemo_eval.utils.api.EvaluationConfig

Bases: {py:obj}`pydantic.BaseModel`

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationConfig
:parser: docs.autodoc2_docstrings_parser
```

```{rubric} Initialization
```

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationConfig.__init__
:parser: docs.autodoc2_docstrings_parser
```

````{py:attribute} output_dir
:canonical: nemo_eval.utils.api.EvaluationConfig.output_dir
:type: str
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationConfig.output_dir
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} supported_endpoint_types
:canonical: nemo_eval.utils.api.EvaluationConfig.supported_endpoint_types
:type: typing.Optional[list[str]]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationConfig.supported_endpoint_types
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} type
:canonical: nemo_eval.utils.api.EvaluationConfig.type
:type: str
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationConfig.type
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} params
:canonical: nemo_eval.utils.api.EvaluationConfig.params
:type: nemo_eval.utils.api.ConfigParams
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.EvaluationConfig.params
:parser: docs.autodoc2_docstrings_parser
```

````

`````

`````{py:class} AdapterConfig(/, **data: typing.Any)
:canonical: nemo_eval.utils.api.AdapterConfig

Bases: {py:obj}`pydantic.BaseModel`

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig
:parser: docs.autodoc2_docstrings_parser
```

```{rubric} Initialization
```

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.__init__
:parser: docs.autodoc2_docstrings_parser
```

````{py:method} get_validated_config(run_config: dict[str, typing.Any]) -> AdapterConfig | None
:canonical: nemo_eval.utils.api.AdapterConfig.get_validated_config
:staticmethod:

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.get_validated_config
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} api_url
:canonical: nemo_eval.utils.api.AdapterConfig.api_url
:type: str
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.api_url
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} local_port
:canonical: nemo_eval.utils.api.AdapterConfig.local_port
:type: typing.Optional[int]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.local_port
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} use_reasoning
:canonical: nemo_eval.utils.api.AdapterConfig.use_reasoning
:type: bool
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.use_reasoning
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} end_reasoning_token
:canonical: nemo_eval.utils.api.AdapterConfig.end_reasoning_token
:type: str
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.end_reasoning_token
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} custom_system_prompt
:canonical: nemo_eval.utils.api.AdapterConfig.custom_system_prompt
:type: typing.Optional[str]
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.custom_system_prompt
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} max_logged_responses
:canonical: nemo_eval.utils.api.AdapterConfig.max_logged_responses
:type: int | None
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.max_logged_responses
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} max_logged_requests
:canonical: nemo_eval.utils.api.AdapterConfig.max_logged_requests
:type: int | None
:value: >
   'Field(...)'

```{autodoc2-docstring} nemo_eval.utils.api.AdapterConfig.max_logged_requests
:parser: docs.autodoc2_docstrings_parser
```

````

`````

````{py:exception} MisconfigurationError()
:canonical: nemo_eval.utils.api.MisconfigurationError

Bases: {py:obj}`Exception`

```{autodoc2-docstring} nemo_eval.utils.api.MisconfigurationError
:parser: docs.autodoc2_docstrings_parser
```

```{rubric} Initialization
```

```{autodoc2-docstring} nemo_eval.utils.api.MisconfigurationError.__init__
:parser: docs.autodoc2_docstrings_parser
```

````
