# {py:mod}`nemo_eval.adapters.interceptors.reasoning_interceptor`

```{py:module} nemo_eval.adapters.interceptors.reasoning_interceptor
```

```{autodoc2-docstring} nemo_eval.adapters.interceptors.reasoning_interceptor
:parser: docs.autodoc2_docstrings_parser
:allowtitles:
```

## Module Contents

### Classes

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`ResponseReasoningInterceptor <nemo_eval.adapters.interceptors.reasoning_interceptor.ResponseReasoningInterceptor>`
  - ```{autodoc2-docstring} nemo_eval.adapters.interceptors.reasoning_interceptor.ResponseReasoningInterceptor
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
````

### Functions

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`_clean_reasoning_tokens <nemo_eval.adapters.interceptors.reasoning_interceptor._clean_reasoning_tokens>`
  - ```{autodoc2-docstring} nemo_eval.adapters.interceptors.reasoning_interceptor._clean_reasoning_tokens
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
````

### API

````{py:function} _clean_reasoning_tokens(response: requests.Response, end_reasoning_token: str) -> requests.Response
:canonical: nemo_eval.adapters.interceptors.reasoning_interceptor._clean_reasoning_tokens

```{autodoc2-docstring} nemo_eval.adapters.interceptors.reasoning_interceptor._clean_reasoning_tokens
:parser: docs.autodoc2_docstrings_parser
```
````

`````{py:class} ResponseReasoningInterceptor(end_reasoning_token: str)
:canonical: nemo_eval.adapters.interceptors.reasoning_interceptor.ResponseReasoningInterceptor

Bases: {py:obj}`nemo_eval.adapters.interceptors.types.ResponseInterceptor`

```{autodoc2-docstring} nemo_eval.adapters.interceptors.reasoning_interceptor.ResponseReasoningInterceptor
:parser: docs.autodoc2_docstrings_parser
```

```{rubric} Initialization
```

```{autodoc2-docstring} nemo_eval.adapters.interceptors.reasoning_interceptor.ResponseReasoningInterceptor.__init__
:parser: docs.autodoc2_docstrings_parser
```

````{py:attribute} _end_reasoning_token
:canonical: nemo_eval.adapters.interceptors.reasoning_interceptor.ResponseReasoningInterceptor._end_reasoning_token
:type: str
:value: >
   None

```{autodoc2-docstring} nemo_eval.adapters.interceptors.reasoning_interceptor.ResponseReasoningInterceptor._end_reasoning_token
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:method} intercept_response(ar: nemo_eval.adapters.interceptors.types.AdapterResponse) -> nemo_eval.adapters.interceptors.types.AdapterResponse
:canonical: nemo_eval.adapters.interceptors.reasoning_interceptor.ResponseReasoningInterceptor.intercept_response

````

`````
