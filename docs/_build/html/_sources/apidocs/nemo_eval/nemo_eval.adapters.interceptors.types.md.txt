# {py:mod}`nemo_eval.adapters.interceptors.types`

```{py:module} nemo_eval.adapters.interceptors.types
```

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types
:parser: docs.autodoc2_docstrings_parser
:allowtitles:
```

## Module Contents

### Classes

````{list-table}
:class: autosummary longtable
:align: left

* - {py:obj}`AdapterMetadata <nemo_eval.adapters.interceptors.types.AdapterMetadata>`
  - ```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterMetadata
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
* - {py:obj}`AdapterRequest <nemo_eval.adapters.interceptors.types.AdapterRequest>`
  - ```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterRequest
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
* - {py:obj}`AdapterResponse <nemo_eval.adapters.interceptors.types.AdapterResponse>`
  - ```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterResponse
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
* - {py:obj}`RequestInterceptor <nemo_eval.adapters.interceptors.types.RequestInterceptor>`
  - ```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.RequestInterceptor
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
* - {py:obj}`ResponseInterceptor <nemo_eval.adapters.interceptors.types.ResponseInterceptor>`
  - ```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.ResponseInterceptor
    :parser: docs.autodoc2_docstrings_parser
    :summary:
    ```
````

### API

`````{py:class} AdapterMetadata
:canonical: nemo_eval.adapters.interceptors.types.AdapterMetadata

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterMetadata
:parser: docs.autodoc2_docstrings_parser
```

````{py:attribute} cache_hit
:canonical: nemo_eval.adapters.interceptors.types.AdapterMetadata.cache_hit
:type: bool
:value: >
   False

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterMetadata.cache_hit
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} cache_key
:canonical: nemo_eval.adapters.interceptors.types.AdapterMetadata.cache_key
:type: str | None
:value: >
   None

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterMetadata.cache_key
:parser: docs.autodoc2_docstrings_parser
```

````

`````

`````{py:class} AdapterRequest
:canonical: nemo_eval.adapters.interceptors.types.AdapterRequest

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterRequest
:parser: docs.autodoc2_docstrings_parser
```

````{py:attribute} r
:canonical: nemo_eval.adapters.interceptors.types.AdapterRequest.r
:type: flask.Request
:value: >
   None

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterRequest.r
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} meta
:canonical: nemo_eval.adapters.interceptors.types.AdapterRequest.meta
:type: nemo_eval.adapters.interceptors.types.AdapterMetadata
:value: >
   None

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterRequest.meta
:parser: docs.autodoc2_docstrings_parser
```

````

`````

`````{py:class} AdapterResponse
:canonical: nemo_eval.adapters.interceptors.types.AdapterResponse

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterResponse
:parser: docs.autodoc2_docstrings_parser
```

````{py:attribute} r
:canonical: nemo_eval.adapters.interceptors.types.AdapterResponse.r
:type: requests.Response
:value: >
   None

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterResponse.r
:parser: docs.autodoc2_docstrings_parser
```

````

````{py:attribute} meta
:canonical: nemo_eval.adapters.interceptors.types.AdapterResponse.meta
:type: nemo_eval.adapters.interceptors.types.AdapterMetadata
:value: >
   None

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.AdapterResponse.meta
:parser: docs.autodoc2_docstrings_parser
```

````

`````

`````{py:class} RequestInterceptor
:canonical: nemo_eval.adapters.interceptors.types.RequestInterceptor

Bases: {py:obj}`abc.ABC`

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.RequestInterceptor
:parser: docs.autodoc2_docstrings_parser
```

````{py:method} intercept_request(req: nemo_eval.adapters.interceptors.types.AdapterRequest) -> nemo_eval.adapters.interceptors.types.AdapterRequest | nemo_eval.adapters.interceptors.types.AdapterResponse
:canonical: nemo_eval.adapters.interceptors.types.RequestInterceptor.intercept_request
:abstractmethod:

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.RequestInterceptor.intercept_request
:parser: docs.autodoc2_docstrings_parser
```

````

`````

`````{py:class} ResponseInterceptor
:canonical: nemo_eval.adapters.interceptors.types.ResponseInterceptor

Bases: {py:obj}`abc.ABC`

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.ResponseInterceptor
:parser: docs.autodoc2_docstrings_parser
```

````{py:method} intercept_response(ar: nemo_eval.adapters.interceptors.types.AdapterResponse) -> nemo_eval.adapters.interceptors.types.AdapterResponse
:canonical: nemo_eval.adapters.interceptors.types.ResponseInterceptor.intercept_response
:abstractmethod:

```{autodoc2-docstring} nemo_eval.adapters.interceptors.types.ResponseInterceptor.intercept_response
:parser: docs.autodoc2_docstrings_parser
```

````

`````
